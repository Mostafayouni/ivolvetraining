Let's break down the tasks step by step:

### 1. Build Image and Push to DockerHub

```bash
# Clone the repository
git clone https://github.com/IbrahimmAdel/static-website.git

# Navigate to the repository directory
cd static-website

# Build the Docker image
docker build -t your-dockerhub-username/static-website .

# Push the Docker image to DockerHub
docker push your-dockerhub-username/static-website
```

Replace `your-dockerhub-username` with your DockerHub username.

### 2. Create Deployment and Service

Here's an example YAML for the deployment and service:

```yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: custom-nginx
spec:
  replicas: 3
  selector:
    matchLabels:
      app: custom-nginx
  template:
    metadata:
      labels:
        app: custom-nginx
    spec:
      containers:
      - name: custom-nginx
        image: your-dockerhub-username/static-website
        ports:
        - containerPort: 80

---

apiVersion: v1
kind: Service
metadata:
  name: custom-nginx
spec:
  selector:
    app: custom-nginx
  ports:
    - protocol: TCP
      port: 80
```

Apply the YAML:

```bash
kubectl apply -f deployment-service.yaml
```

### 3. Define Network Policy

Here's an example YAML for the network policy:

```yaml
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: allow-nginx
spec:
  podSelector:
    matchLabels:
      app: custom-nginx
  policyTypes:
  - Ingress
  ingress:
  - from:
    - podSelector: {}
```

Apply the network policy:

```bash
kubectl apply -f network-policy.yaml
```

### 4. Enable NGINX Ingress Controller

Assuming you have Minikube installed, enable the NGINX Ingress controller:

```bash
minikube addons enable ingress
```

### 5. Create Ingress Resource

Here's an example YAML for the Ingress resource:

```yaml
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: custom-nginx-ingress
spec:
  rules:
  - host: your-domain.com
    http:
      paths:
      - pathType: Prefix
        path: /
        backend:
          service:
            name: custom-nginx
            port:
              number: 80
```

Apply the Ingress resource:

```bash
kubectl apply -f ingress.yaml
```

### 6. Update /etc/hosts

Edit `/etc/hosts` file and add an entry to map your domain to Minikube IP address:

```
<minikube-ip>  your-domain.com
```

Replace `<minikube-ip>` with the IP address of Minikube.

### 7. Access the Custom NGINX Service

Now, you should be able to access your custom NGINX service via the Ingress endpoint using the domain name `your-domain.com`.


